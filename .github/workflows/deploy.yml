name: Deploy Ukrainian Transcription API

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_IP }}
        username: root
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        timeout: 1800s
        command_timeout: 1200s
        script: |
          echo "üöÄ –î–µ–ø–ª–æ–π Ukrainian Transcription API"
          echo "======================================"
          
          # –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –≤ —Ä–æ–±–æ—á—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
          cd /root
          rm -rf transcription-api
          mkdir -p transcription-api
          cd transcription-api
          
          # –ö–ª–æ–Ω—É—î–º–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π
          echo "üì• –ö–ª–æ–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é..."
          git clone https://github.com/WarmingZ/transcription-api.git .
          
          # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å–∏—Å—Ç–µ–º–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
          echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
          apt-get update -qq
          apt-get install -y python3 python3-pip python3-venv python3-dev ffmpeg curl git gfortran build-essential
          
          # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
          echo "üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
          python3 -m venv venv
          source venv/bin/activate
          
          # –û–Ω–æ–≤–ª—é—î–º–æ pip
          echo "üîß –û–Ω–æ–≤–ª–µ–Ω–Ω—è pip..."
          pip install --upgrade pip setuptools wheel
          
          # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –ø–æ–µ—Ç–∞–ø–Ω–æ
          echo "üìö –ï—Ç–∞–ø 1: –ë–∞–∑–æ–≤—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ..."
          pip install numpy scipy
          
          echo "üìö –ï—Ç–∞–ø 2: PyTorch..."
          pip install torch torchaudio --index-url https://download.pytorch.org/whl/cpu
          
          echo "üìö –ï—Ç–∞–ø 3: ML –º–æ–¥–µ–ª—ñ..."
          pip install faster-whisper librosa webrtcvad
          
          echo "üìö –ï—Ç–∞–ø 4: Web —Ñ—Ä–µ–π–º–≤–æ—Ä–∫..."
          pip install fastapi uvicorn python-multipart aiofiles httpx pydantic python-dotenv
          
          echo "üìö –ï—Ç–∞–ø 5: –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ..."
          pip install scikit-learn transformers whisper-timestamped datasets accelerate language_tool_python psutil
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ –ø–∞–∫–µ—Ç–∏
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤..."
          pip list | grep -E "(torch|numpy|scipy|fastapi|faster-whisper|librosa|webrtcvad)"
          
          # –¢–µ—Å—Ç—É—î–º–æ –∫—Ä–∏—Ç–∏—á–Ω—ñ —ñ–º–ø–æ—Ä—Ç–∏
          echo "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —ñ–º–ø–æ—Ä—Ç—ñ–≤..."
          python -c "
          try:
              import torch; print('‚úÖ PyTorch')
              import numpy; print('‚úÖ NumPy')
              import scipy; print('‚úÖ SciPy')
              import fastapi; print('‚úÖ FastAPI')
              import faster_whisper; print('‚úÖ Faster Whisper')
              import librosa; print('‚úÖ Librosa')
              import webrtcvad; print('‚úÖ WebRTC VAD')
              print('üéâ –í—Å—ñ –∫—Ä–∏—Ç–∏—á–Ω—ñ –ø–∞–∫–µ—Ç–∏ –ø—Ä–∞—Ü—é—é—Ç—å!')
          except Exception as e:
              print(f'‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É: {e}')
              exit(1)
          "
          
          # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–¥–µ–ª—ñ
          echo "ü§ñ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π..."
          python download_models.py
          
          # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
          mkdir -p logs temp static
          
          # –ó—É–ø–∏–Ω—è—î–º–æ —Å—Ç–∞—Ä–∏–π –ø—Ä–æ—Ü–µ—Å
          echo "üõë –ó—É–ø–∏–Ω–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—É..."
          pkill -f "python main.py" || true
          sleep 3
          
          # –ó–∞–ø—É—Å–∫–∞—î–º–æ API
          echo "üöÄ –ó–∞–ø—É—Å–∫ API..."
          nohup venv/bin/python main.py > logs/app.log 2>&1 &
          echo $! > logs/app.pid
          
          # –û—á—ñ–∫—É—î–º–æ –∑–∞–ø—É—Å–∫—É
          echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É (30 —Å–µ–∫—É–Ω–¥)..."
          sleep 30
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É API..."
          if curl -f http://localhost:8000/health; then
            echo ""
            echo "‚úÖ –î–ï–ü–õ–û–ô –£–°–ü–Ü–®–ù–ò–ô!"
            echo "üåê API –¥–æ—Å—Ç—É–ø–Ω–∏–π –Ω–∞: http://localhost:8000"
            echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: http://localhost:8000/docs"
          else
            echo "‚ùå –ü–û–ú–ò–õ–ö–ê –ó–ê–ü–£–°–ö–£!"
            echo "üìã –û—Å—Ç–∞–Ω–Ω—ñ –ª–æ–≥–∏:"
            tail -20 logs/app.log
            exit 1
          fi
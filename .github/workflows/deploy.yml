name: Deploy Ukrainian Transcription API

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_IP }}
        username: root
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        timeout: 1200s
        command_timeout: 900s
        script: |
          echo "üöÄ –î–µ–ø–ª–æ–π Ukrainian Transcription API"
          echo "======================================"
          
          # –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –≤ —Ä–æ–±–æ—á—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
          cd /root
          mkdir -p transcription-api
          cd transcription-api
          
          # –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–¥
          if [ ! -d ".git" ]; then
            echo "üì• –ö–ª–æ–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é..."
            git clone https://github.com/WarmingZ/transcription-api.git .
          else
            echo "üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É..."
            git pull origin main
          fi
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–µ—Ä—Å—ñ—é —Å–∏—Å—Ç–µ–º–∏
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–∏..."
          cat /etc/os-release
          python3 --version
          
          # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å–∏—Å—Ç–µ–º–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –¥–ª—è Debian
          echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
          apt-get update -qq
          apt-get install -y \
            curl \
            git \
            python3 \
            python3-venv \
            python3-dev \
            python3-pip \
            ffmpeg \
            gfortran \
            build-essential \
            pkg-config \
            libsndfile1-dev \
            libasound2-dev \
            portaudio19-dev \
            libffi-dev \
            libssl-dev \
            zlib1g-dev \
            libbz2-dev \
            libreadline-dev \
            libsqlite3-dev \
            libncurses5-dev \
            libncursesw5-dev \
            xz-utils \
            tk-dev \
            libxml2-dev \
            libxmlsec1-dev \
            libffi-dev \
            liblzma-dev
          
          # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
          echo "üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          # –ê–∫—Ç–∏–≤—É—î–º–æ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
          source venv/bin/activate
          
          # –û–Ω–æ–≤–ª—é—î–º–æ pip —Ç–∞ –±–∞–∑–æ–≤—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏
          echo "üîß –û–Ω–æ–≤–ª–µ–Ω–Ω—è pip —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤..."
          pip install --upgrade pip wheel
          pip install "setuptools<81"  # –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç –∑ webrtcvad
          
          # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Python –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –ø–æ–µ—Ç–∞–ø–Ω–æ
          echo "üìö –ï—Ç–∞–ø 1: –ë–∞–∑–æ–≤—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ..."
          pip install numpy==1.24.3 || pip install numpy
          pip install scipy==1.11.4 || pip install scipy
          
          echo "üìö –ï—Ç–∞–ø 2: PyTorch..."
          pip install torch==2.1.0 torchaudio==2.1.0 --index-url https://download.pytorch.org/whl/cpu || {
            echo "‚ö†Ô∏è PyTorch –∑ CPU –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–∏–≤—Å—è, —Å–ø—Ä–æ–±—É—î–º–æ –±–µ–∑ CPU..."
            pip install torch torchaudio
          }
          
          echo "üìö –ï—Ç–∞–ø 3: –ê—É–¥—ñ–æ –æ–±—Ä–æ–±–∫–∞..."
          pip install librosa==0.10.1 || pip install librosa
          
          # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ webrtcvad –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
          echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è webrtcvad..."
          pip install webrtcvad==2.0.10 || pip install webrtcvad
          
          pip install git+https://github.com/dofuuz/python-soxr.git || {
            echo "‚ö†Ô∏è soxr –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–∏–≤—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ..."
          }
          
          echo "üìö –ï—Ç–∞–ø 4: ML –º–æ–¥–µ–ª—ñ..."
          pip install faster-whisper==0.10.0 || pip install faster-whisper
          pip install speechbrain==0.5.16 || pip install speechbrain
          pip install transformers==4.35.2 || pip install transformers
          pip install scikit-learn==1.3.2 || pip install scikit-learn
          
          echo "üìö –ï—Ç–∞–ø 5: –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ..."
          pip install whisper-timestamped==1.14.2 || pip install whisper-timestamped
          pip install datasets==2.14.6 || pip install datasets
          pip install accelerate==0.24.1 || pip install accelerate
          pip install language_tool_python==2.7.1 || {
            echo "‚ö†Ô∏è language_tool_python –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–∏–≤—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ..."
          }
          
          echo "üìö –ï—Ç–∞–ø 6: Web —Ñ—Ä–µ–π–º–≤–æ—Ä–∫..."
          pip install fastapi==0.104.1 || pip install fastapi
          pip install uvicorn[standard]==0.24.0 || pip install uvicorn
          pip install python-multipart==0.0.6 || pip install python-multipart
          pip install aiofiles==23.2.1 || pip install aiofiles
          pip install httpx==0.25.2 || pip install httpx
          pip install pydantic==2.5.0 || pip install pydantic
          pip install python-dotenv==1.0.0 || pip install python-dotenv
          pip install psutil==5.9.6 || pip install psutil
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ –ø–∞–∫–µ—Ç–∏
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤..."
          pip list | grep -E "(torch|librosa|faster-whisper|webrtcvad|scipy|fastapi|speechbrain|setuptools)"
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–µ—Ä—Å—ñ—é setuptools
          echo "üîç –í–µ—Ä—Å—ñ—è setuptools:"
          pip show setuptools | grep Version
          
          # –¢–µ—Å—Ç—É—î–º–æ –∫—Ä–∏—Ç–∏—á–Ω—ñ —ñ–º–ø–æ—Ä—Ç–∏
          echo "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —ñ–º–ø–æ—Ä—Ç—ñ–≤..."
          python -c "
          import sys
          failed_imports = []
          
          try:
              import torch; print('‚úÖ torch')
          except Exception as e:
              print(f'‚ùå torch: {e}')
              failed_imports.append('torch')
              
          try:
              import torchaudio; print('‚úÖ torchaudio')
          except Exception as e:
              print(f'‚ùå torchaudio: {e}')
              failed_imports.append('torchaudio')
              
          try:
              import faster_whisper; print('‚úÖ faster-whisper')
          except Exception as e:
              print(f'‚ùå faster-whisper: {e}')
              failed_imports.append('faster-whisper')
              
          try:
              import librosa; print('‚úÖ librosa')
          except Exception as e:
              print(f'‚ùå librosa: {e}')
              failed_imports.append('librosa')
              
          try:
              import webrtcvad; print('‚úÖ webrtcvad')
          except Exception as e:
              print(f'‚ùå webrtcvad: {e}')
              failed_imports.append('webrtcvad')
              
          try:
              import scipy; print('‚úÖ scipy')
          except Exception as e:
              print(f'‚ùå scipy: {e}')
              failed_imports.append('scipy')
              
          try:
              import fastapi; print('‚úÖ fastapi')
          except Exception as e:
              print(f'‚ùå fastapi: {e}')
              failed_imports.append('fastapi')
              
          try:
              import speechbrain; print('‚úÖ speechbrain')
          except Exception as e:
              print(f'‚ùå speechbrain: {e}')
              failed_imports.append('speechbrain')
          
          if failed_imports:
              print(f'‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏: {failed_imports}')
              sys.exit(1)
          else:
              print('üéâ –í—Å—ñ –∫—Ä–∏—Ç–∏—á–Ω—ñ –ø–∞–∫–µ—Ç–∏ –ø—Ä–∞—Ü—é—é—Ç—å!')
          " || {
            echo "‚ùå –î–µ—è–∫—ñ —ñ–º–ø–æ—Ä—Ç–∏ –Ω–µ –ø—Ä–∞—Ü—é—é—Ç—å, –∞–ª–µ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ..."
          }
          
          # –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π —Ç–µ—Å—Ç –¥–ª—è webrtcvad
          echo "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è webrtcvad..."
          python -c "
          import warnings
          warnings.filterwarnings('ignore', category=UserWarning)
          try:
              import webrtcvad
              vad = webrtcvad.Vad(2)
              print('‚úÖ webrtcvad –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
          except Exception as e:
              print(f'‚ùå webrtcvad –ø–æ–º–∏–ª–∫–∞: {e}')
          " || echo "‚ö†Ô∏è webrtcvad –º–∞—î –ø—Ä–æ–±–ª–µ–º–∏, –∞–ª–µ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ..."
          
          # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–¥–µ–ª—ñ
          echo "ü§ñ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π..."
          if [ ! -d "models/faster-whisper-medium" ]; then
            echo "üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è faster-whisper –º–æ–¥–µ–ª–µ–π..."
            python download_models.py
          else
            echo "‚úÖ –ú–æ–¥–µ–ª—ñ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ"
          fi
          
          # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
          mkdir -p logs temp static
          
          # –ó—É–ø–∏–Ω—è—î–º–æ —Å—Ç–∞—Ä–∏–π –ø—Ä–æ—Ü–µ—Å
          echo "üõë –ó—É–ø–∏–Ω–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—É..."
          pkill -f "python main.py" || true
          sleep 3
          
          # –ó–∞–ø—É—Å–∫–∞—î–º–æ API
          echo "üöÄ –ó–∞–ø—É—Å–∫ API..."
          nohup venv/bin/python main.py > logs/app.log 2>&1 &
          echo $! > logs/app.pid
          
          # –û—á—ñ–∫—É—î–º–æ –∑–∞–ø—É—Å–∫—É
          echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É (20 —Å–µ–∫—É–Ω–¥)..."
          sleep 20
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É API..."
          if curl -f http://localhost:8000/health; then
            echo ""
            echo "‚úÖ –î–ï–ü–õ–û–ô –£–°–ü–Ü–®–ù–ò–ô!"
            echo "üåê API –¥–æ—Å—Ç—É–ø–Ω–∏–π –Ω–∞: http://localhost:8000"
            echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: http://localhost:8000/docs"
            echo "üñ•Ô∏è –í–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8000/static/index.html"
          else
            echo "‚ùå –ü–û–ú–ò–õ–ö–ê –ó–ê–ü–£–°–ö–£!"
            echo "üìã –û—Å—Ç–∞–Ω–Ω—ñ –ª–æ–≥–∏:"
            tail -30 logs/app.log
            exit 1
          fi
name: Deploy Transcription API

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_IP }}
        username: root
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        timeout: 900s
        command_timeout: 600s
        script: |
          echo "üöÄ –î–µ–ø–ª–æ–π Ukrainian Transcription API"
          echo "======================================"
          
          cd /root
          mkdir -p transcription-api
          cd transcription-api
          
          if [ ! -d ".git" ]; then
            echo "üì• –ö–ª–æ–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é..."
            git clone https://github.com/WarmingZ/transcription-api.git .
          else
            echo "üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É..."
            git pull origin main
          fi
          
          echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
          apt-get update -qq
          apt-get install -y curl git python3 python3-venv python3-dev python3-pip ffmpeg gfortran build-essential pkg-config

          echo "üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          source venv/bin/activate
          pip install --upgrade pip setuptools wheel

          echo "üìö –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Python –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
          pip install numpy
          pip install torch>=2.5.0 --index-url https://download.pytorch.org/whl/cpu
          pip install torchaudio>=2.5.0 --index-url https://download.pytorch.org/whl/cpu
          
          echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è SciPy —Ç–∞ Librosa..."
          pip install scipy --only-binary=all || pip install scipy
          pip install librosa --only-binary=all || pip install librosa
          
          echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—à–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
          pip install webrtcvad
          pip install git+https://github.com/dofuuz/python-soxr.git
          
          echo "üîß –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—É setuptools –¥–ª—è Python 3.13..."
          pip install "setuptools<81" --force-reinstall
          
          echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è faster-whisper..."
          pip install faster-whisper[openvino]==0.10.0 || {
            echo "‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–∏–π —Å–ø–æ—Å—ñ–± –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞–≤, —Å–ø—Ä–æ–±—É—î–º–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π..."
            pip install faster-whisper==0.10.0
          }
          
          echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ—à—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
          pip install -r requirements.txt --no-deps
          pip install -r requirements.txt
          
          echo "ü§ñ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π..."
          if [ ! -d "models/faster-whisper-medium" ]; then
            echo "üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π Whisper..."
            python download_models.py
          else
            echo "‚úÖ –ú–æ–¥–µ–ª—ñ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ"
          fi
          
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤..."
          pip list | grep -E "(torch|librosa|faster-whisper|webrtcvad|scipy|setuptools)"
          
          echo "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç—É faster-whisper..."
          python -c "import faster_whisper; print('‚úÖ faster-whisper –ø—Ä–∞—Ü—é—î!')" || echo "‚ùå faster-whisper –Ω–µ –ø—Ä–∞—Ü—é—î!"
          
          mkdir -p logs temp
          
          echo "üõë –ó—É–ø–∏–Ω–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—É..."
          pkill -f "python main.py" || true
          sleep 3
          
          echo "üöÄ –ó–∞–ø—É—Å–∫ API..."
          nohup venv/bin/python main.py > logs/app.log 2>&1 &
          echo $! > logs/app.pid
          
          echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É (15 —Å–µ–∫—É–Ω–¥)..."
          sleep 15
          
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É API..."
          if curl -f http://localhost:8000/health; then
            echo "‚úÖ –î–ï–ü–õ–û–ô –£–°–ü–Ü–®–ù–ò–ô!"
          else
            echo "‚ùå –ü–û–ú–ò–õ–ö–ê –ó–ê–ü–£–°–ö–£!"
            tail -20 logs/app.log
            exit 1
          fi

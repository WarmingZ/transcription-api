#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫—É –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü—ñ—ó
# –î–ª—è —Å–µ—Ä–≤–µ—Ä–∞ 8CPU + 14GB RAM

echo "üöÄ –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü—ñ—ó..."

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
export OMP_NUM_THREADS=3
export MKL_NUM_THREADS=3
export NUMEXPR_NUM_THREADS=3
export OPENBLAS_NUM_THREADS=3
export PYTHONHASHSEED=0

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Python –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
export PYTHONOPTIMIZE=1
export PYTHONDONTWRITEBYTECODE=1

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–∞–º'—è—Ç—ñ
export MALLOC_ARENA_MAX=2

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Ä–µ—Å—É—Ä—Å—ñ–≤
echo "üìä –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤..."

# CPU
CPU_COUNT=$(nproc)
echo "  CPU: $CPU_COUNT —è–¥–µ—Ä"

# RAM
RAM_GB=$(free -g | awk 'NR==2{printf "%.1f", $2}')
echo "  RAM: ${RAM_GB}GB"

# –î–∏—Å–∫
DISK_GB=$(df -h / | awk 'NR==2{print $4}')
echo "  –î–∏—Å–∫: $DISK_GB –≤—ñ–ª—å–Ω–∏—Ö"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏—Ö –≤–∏–º–æ–≥
if [ "$CPU_COUNT" -lt 4 ]; then
    echo "‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è: –ú–µ–Ω—à–µ 4 CPU —è–¥–µ—Ä"
fi

if (( $(echo "$RAM_GB < 8" | bc -l) )); then
    echo "‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è: –ú–µ–Ω—à–µ 8GB RAM"
fi

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
echo "üìÅ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π..."
mkdir -p data
mkdir -p temp
mkdir -p logs

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Python —Ç–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
echo "üêç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Python..."
python3 --version

# –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ (—è–∫—â–æ —î)
if [ -d "venv" ]; then
    echo "üîß –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
    source venv/bin/activate
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
echo "üì¶ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
python3 -c "import torch, faster_whisper, fastapi; print('‚úÖ –û—Å–Ω–æ–≤–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ')" || {
    echo "‚ùå –ü–æ–º–∏–ª–∫–∞: –ù–µ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ"
    echo "–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: pip install -r requirements.txt"
    exit 1
}

# –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —Ñ–∞–π–ª—ñ–≤
echo "üßπ –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —Ñ–∞–π–ª—ñ–≤..."
find temp/ -type f -mtime +1 -delete 2>/dev/null || true
find logs/ -name "*.log" -mtime +7 -delete 2>/dev/null || true

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º–æ–Ω—ñ—Ç–æ—Ä–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ
echo "üìä –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º–æ–Ω—ñ—Ç–æ—Ä–∞..."
python3 system_monitor.py &
MONITOR_PID=$!

# –§—É–Ω–∫—Ü—ñ—è –æ—á–∏—â–µ–Ω–Ω—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ñ
cleanup() {
    echo "üõë –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏..."
    kill $MONITOR_PID 2>/dev/null || true
    echo "‚úÖ –°–∏—Å—Ç–µ–º–Ω–∏–π –º–æ–Ω—ñ—Ç–æ—Ä –∑—É–ø–∏–Ω–µ–Ω–æ"
    exit 0
}

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏ —Å–∏–≥–Ω–∞–ª—ñ–≤
trap cleanup SIGINT SIGTERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü—ñ—ó..."
echo "   Host: 0.0.0.0"
echo "   Port: 8000"
echo "   Workers: 1 (–æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ –¥–ª—è CPU)"
echo "   Threads: 3 (–æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ –¥–ª—è 8CPU)"
echo ""
echo "üìù –õ–æ–≥–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ logs/server.log"
echo "üìä –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–∏ –≤ logs/system_monitor.log"
echo ""
echo "üîó –î–æ—Å—Ç—É–ø –¥–æ API: http://localhost:8000"
echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: http://localhost:8000/docs"
echo ""

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –∑ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
uvicorn main:app \
    --host 0.0.0.0 \
    --port 8000 \
    --workers 1 \
    --worker-class uvicorn.workers.UvicornWorker \
    --access-log \
    --log-level info \
    --timeout-keep-alive 30 \
    --limit-concurrency 10 \
    --limit-max-requests 1000 \
    --backlog 100 \
    --log-config logging.conf 2>/dev/null || \
uvicorn main:app \
    --host 0.0.0.0 \
    --port 8000 \
    --workers 1 \
    --access-log \
    --log-level info \
    --timeout-keep-alive 30

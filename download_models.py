#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π –ø—ñ—Å–ª—è –∫–ª–æ–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
"""

import os
import logging
from models import LocalTranscriptionService

def download_models():
    """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–¥–µ–ª—ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ"""
    
    logging.basicConfig(level=logging.INFO)
    logger = logging.getLogger(__name__)
    
    logger.info("üöÄ –ü–æ—á–∞—Ç–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π...")
    
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Å–µ—Ä–≤—ñ—Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—ó
        service = LocalTranscriptionService()
        
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–¥–µ–ª—ñ
        logger.info("üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è faster-whisper –º–æ–¥–µ–ª–µ–π...")
        service.load_models()
        
        logger.info("‚úÖ –í—Å—ñ –º–æ–¥–µ–ª—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ —É—Å–ø—ñ—à–Ω–æ!")
        logger.info("üéØ –ú–æ–¥–µ–ª—ñ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –≤:")
        logger.info("   - models/faster-whisper-medium/")
        logger.info("   - models/faster-whisper-small/")
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π: {e}")
        return False
    
    return True

if __name__ == "__main__":
    print("üì¶ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π –¥–ª—è Ukrainian Transcription API")
    print("=" * 60)
    
    if download_models():
        print("\nüéâ –ì–æ—Ç–æ–≤–æ! –ú–æ–¥–µ–ª—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ.")
        print("üöÄ –¢–µ–ø–µ—Ä –º–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏: python main.py")
    else:
        print("\n‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π!")
        print("üí° –°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–∫—Ä–∏–ø—Ç —â–µ —Ä–∞–∑")
